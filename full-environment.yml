---
- name: Configure AWS Resources
  hosts: all
  connection: local
  gather_facts: False
  vars:
    aws_region: ap-south-1
    aws_az: ap-south-1a
  tasks:
    - name: Ping Local Machine
      ping:
    
    - name: Create a VPC
      ec2_vpc_net:
        name: AnsibleAWS
        state: present
        region: "{{ aws_region }}"
        cidr_block: 10.10.0.0/16
        tags:
          Environment: Development
      register: vpc
    # - debug: var=vpc

    - name: Ensure Internet Gateway for VPC
      ec2_vpc_igw:
        state: present
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
      register: igw
    
    - name: Create Subnets for VPC
      ec2_vpc_subnet:
        state: present
        az: "{{ aws_az }}"
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: 10.10.0.0/24
        resource_tags:
          Environment: Development
      register: subnets
    
    - name: Enable Internet for subnets
      ec2_vpc_route_table:
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: Public
        subnets:
          - "{{ subnets.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public_routes

    - name: Create Security Group
      ec2_group:
        name: ansible-aws-demo
        state: present
        region: "{{ aws_region }}"
        vpc_id: "{{ vpc.vpc.id }}"
        description: A SecGroup for websever
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 2
            to_port: 22
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: security_group

    - name: Create Key-Pair
      ec2_key:
        name: ansible-aws
        region: "{{ aws_region }}"
        key_material: "{{ item }}"
      with_file: /home/aditya/.ssh/id_rsa.pub
      register: ssh_key
    # - debug: var=ssh_key
    
    - name: Create Instances
      ec2:
        image: ami-0123b531fc646552f
        region: "{{ aws_region }}"
        instance_type: t2.micro
        instance_tags:
          project: AnsibleWordpressAuto
        count_tag: 
          project: AnsibleWordpressAuto
        exact_count: 1
        vpc_subnet_id: "{{ subnets.subnet.id }}"
        group_id: "{{ security_group.group_id }}"
        key_name: "{{ ssh_key.results[0].key.name }}"
        zone: "{{ aws_az }}"
        wait: yes
        assign_public_ip: True
      register: instances
    - debug: msg="{{instances.tagged_instances[0].public_dns_name}}"